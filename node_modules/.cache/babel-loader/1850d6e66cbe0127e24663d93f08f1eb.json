{"ast":null,"code":"var _jsxFileName = \"/Users/kareemhelal/Documents/Work/foody-test/src/App.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.scheduleDish = dish => {\n      if (moment().utcOffset('-0500') > moment.utcOffset('-0500').startOf('day').hour('19').minute('15')) {\n        if (this.state.scheduledDishes.length < 3) {\n          let scheduledDishes = this.state.scheduledDishes;\n          scheduledDishes.push(dish);\n          alert('Dish scheduled successfuly');\n        } else {\n          alert('You cant schedule more than 3 dishes.');\n        }\n      } else {\n        alert('You cant scheduleafter 7:15');\n      }\n    };\n\n    this.state = {\n      userAvailableDishes: 3,\n      dishes: [],\n      scheduledDishes: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(moment().utcOffset('-0500').hours() < 7);\n    fetch('https://testapi.io/api/sajhu/dishes').then(res => res.json()).then(data => {\n      this.setState({\n        dishes: data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Grid, {\n      container: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, this.state.dishes.map(dish => /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 12,\n      sm: 3,\n      key: dish._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        maxWidth: 300\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(CardMedia, {\n      image: dish.photoUrl,\n      title: dish.name,\n      style: {\n        height: 140\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      gutterBottom: true,\n      variant: \"h5\",\n      component: \"h2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, dish.name), /*#__PURE__*/React.createElement(Typography, {\n      variant: \"body2\",\n      color: \"textSecondary\",\n      component: \"p\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }\n    }, dish.shortDescription)), /*#__PURE__*/React.createElement(CardActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      size: \"small\",\n      color: \"primary\",\n      onClick: () => {\n        this.scheduleDish(dish);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }\n    }, \"Schedule Dish\"))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kareemhelal/Documents/Work/foody-test/src/App.js"],"names":["React","makeStyles","moment","Card","CardActionArea","CardActions","CardContent","CardMedia","Typography","Button","Grid","App","Component","constructor","props","scheduleDish","dish","utcOffset","startOf","hour","minute","state","scheduledDishes","length","push","alert","userAvailableDishes","dishes","componentDidMount","console","log","hours","fetch","then","res","json","data","setState","render","map","_id","maxWidth","photoUrl","name","height","shortDescription"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\n\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      userAvailableDishes: 3,\n      dishes: [],\n      scheduledDishes: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(moment().utcOffset('-0500').hours() < 7);\n\n    fetch('https://testapi.io/api/sajhu/dishes')\n        .then( res => res.json())\n        .then((data)=> {\n            this.setState({\n                dishes: data\n            });\n        })\n  }  \n\n  scheduleDish = (dish) => {\n    if (moment().utcOffset('-0500') > moment.utcOffset('-0500').startOf('day').hour('19').minute('15')) {\n      if(this.state.scheduledDishes.length < 3) {\n        let scheduledDishes = this.state.scheduledDishes;\n        scheduledDishes.push(dish);\n        alert('Dish scheduled successfuly');\n      } else {\n        alert('You cant schedule more than 3 dishes.')\n      }\n    } else {\n      alert('You cant scheduleafter 7:15')\n    }\n  }\n\n\n  render() {\n    return (\n      <Grid container>\n        {this.state.dishes.map(dish => (\n        <Grid item xs={12} sm={3} key={dish._id}>\n            <Card style={{maxWidth: 300}}>\n              <CardMedia\n                image={dish.photoUrl}\n                title={dish.name}\n                style={{height: 140}}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {dish.name}\n                </Typography>\n                <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                  {dish.shortDescription}\n                </Typography>\n              </CardContent>\n              <CardActions>\n                <Button size=\"small\" color=\"primary\" onClick={() => {this.scheduleDish(dish)}}>\n                  Schedule Dish\n                </Button>\n              </CardActions>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}