{"ast":null,"code":"var _jsxFileName = \"/Users/kareemhelal/Documents/Work/foody-test/src/App.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Add from '@material-ui/icons/Add';\nimport Remove from '@material-ui/icons/Remove';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.addDish = dishId => {\n      if (moment().utcOffset('-0500') < moment().utcOffset('-0500').startOf('day').hour('19').minute('15')) {\n        if (this.state.scheduledDishes.length < 3) {\n          let scheduledDishes = this.state.scheduledDishes;\n          scheduledDishes.push(dishId);\n          this.setState(scheduledDishes);\n          alert('Dish scheduled successfuly');\n        } else {\n          alert('You cant schedule more than 3 dishes.');\n        }\n      } else {\n        alert('You cant schedule after 7:15');\n      }\n    };\n\n    this.removeDish = dishId => {\n      let scheduledDishes = this.state.scheduledDishes;\n\n      if (scheduledDishes.filter(dish => dishId === dish)) {\n        const index = scheduledDishes.indexOf(dishId);\n\n        if (index > -1) {\n          scheduledDishes.splice(index, 1);\n          this.setState(scheduledDishes);\n        }\n      }\n    };\n\n    this.getAmountOfDishes = dishId => {\n      const scheduledDishes = this.state.scheduledDishes;\n      return scheduledDishes.filter(id => id === dishId).length;\n    };\n\n    this.state = {\n      userAvailableDishes: 3,\n      dishes: [],\n      scheduledDishes: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(moment().utcOffset('-0500').hours() < 7);\n    fetch('https://testapi.io/api/sajhu/dishes').then(res => res.json()).then(data => {\n      this.setState({\n        dishes: data\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }\n    }, this.state.dishes.map(dish => /*#__PURE__*/React.createElement(\"div\", {\n      key: dish._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }\n    }, dish.name), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    }, dish.shortDescription), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.removeDish(dish),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }\n    }, \"-\"), /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }\n    }, this.getAmountOfDishes(dish._id)), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: () => this.addDish(dish),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }\n    }, \"+\"))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/kareemhelal/Documents/Work/foody-test/src/App.js"],"names":["React","makeStyles","moment","Card","CardActionArea","CardActions","CardContent","CardMedia","Typography","Button","Grid","Add","Remove","App","Component","constructor","props","addDish","dishId","utcOffset","startOf","hour","minute","state","scheduledDishes","length","push","setState","alert","removeDish","filter","dish","index","indexOf","splice","getAmountOfDishes","id","userAvailableDishes","dishes","componentDidMount","console","log","hours","fetch","then","res","json","data","render","map","_id","name","shortDescription"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,0BAA3B;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,UAAP,MAAuB,8BAAvB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,GAAP,MAAgB,wBAAhB;AACA,OAAOC,MAAP,MAAmB,2BAAnB;;AAEA,MAAMC,GAAN,SAAkBb,KAAK,CAACc,SAAxB,CAAkC;AAEhCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAqBnBC,OArBmB,GAqBRC,MAAD,IAAY;AACpB,UAAIhB,MAAM,GAAGiB,SAAT,CAAmB,OAAnB,IAA8BjB,MAAM,GAAGiB,SAAT,CAAmB,OAAnB,EAA4BC,OAA5B,CAAoC,KAApC,EAA2CC,IAA3C,CAAgD,IAAhD,EAAsDC,MAAtD,CAA6D,IAA7D,CAAlC,EAAsG;AACpG,YAAG,KAAKC,KAAL,CAAWC,eAAX,CAA2BC,MAA3B,GAAoC,CAAvC,EAA0C;AACxC,cAAID,eAAe,GAAG,KAAKD,KAAL,CAAWC,eAAjC;AACAA,UAAAA,eAAe,CAACE,IAAhB,CAAqBR,MAArB;AACA,eAAKS,QAAL,CAAcH,eAAd;AACAI,UAAAA,KAAK,CAAC,4BAAD,CAAL;AACD,SALD,MAKO;AACLA,UAAAA,KAAK,CAAC,uCAAD,CAAL;AACD;AACF,OATD,MASO;AACLA,QAAAA,KAAK,CAAC,8BAAD,CAAL;AACD;AACF,KAlCkB;;AAAA,SAoCnBC,UApCmB,GAoCLX,MAAD,IAAY;AACvB,UAAIM,eAAe,GAAG,KAAKD,KAAL,CAAWC,eAAjC;;AACA,UAAIA,eAAe,CAACM,MAAhB,CAAuBC,IAAI,IAAIb,MAAM,KAAKa,IAA1C,CAAJ,EAAqD;AACnD,cAAMC,KAAK,GAAGR,eAAe,CAACS,OAAhB,CAAwBf,MAAxB,CAAd;;AACA,YAAIc,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdR,UAAAA,eAAe,CAACU,MAAhB,CAAuBF,KAAvB,EAA8B,CAA9B;AACA,eAAKL,QAAL,CAAcH,eAAd;AACD;AACF;AACF,KA7CkB;;AAAA,SA+CnBW,iBA/CmB,GA+CEjB,MAAD,IAAY;AAC9B,YAAMM,eAAe,GAAG,KAAKD,KAAL,CAAWC,eAAnC;AACA,aAAOA,eAAe,CAACM,MAAhB,CAAuBM,EAAE,IAAIA,EAAE,KAAKlB,MAApC,EAA4CO,MAAnD;AACD,KAlDkB;;AAEjB,SAAKF,KAAL,GAAa;AACXc,MAAAA,mBAAmB,EAAE,CADV;AAEXC,MAAAA,MAAM,EAAE,EAFG;AAGXd,MAAAA,eAAe,EAAE;AAHN,KAAb;AAKD;;AAEDe,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,OAAO,CAACC,GAAR,CAAYvC,MAAM,GAAGiB,SAAT,CAAmB,OAAnB,EAA4BuB,KAA5B,KAAsC,CAAlD;AAEAC,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACKC,IADL,CACWC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADlB,EAEKF,IAFL,CAEWG,IAAD,IAAS;AACX,WAAKpB,QAAL,CAAc;AACVW,QAAAA,MAAM,EAAES;AADE,OAAd;AAGH,KANL;AAOD;;AAkCDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKzB,KAAL,CAAWe,MAAX,CAAkBW,GAAlB,CAAsBlB,IAAI,iBAC3B;AAAK,MAAA,GAAG,EAAEA,IAAI,CAACmB,GAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGnB,IAAI,CAACoB,IADR,CADR,eAIQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGpB,IAAI,CAACqB,gBADR,CAJR,eAOQ;AAAQ,MAAA,OAAO,EAAE,MAAM,KAAKvB,UAAL,CAAgBE,IAAhB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAPR,eAUQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAO,KAAKI,iBAAL,CAAuBJ,IAAI,CAACmB,GAA5B,CAAP,CAVR,eAWQ;AAAS,MAAA,OAAO,EAAE,MAAM,KAAKjC,OAAL,CAAac,IAAb,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAXR,CADC,CADH,CADF;AAqBD;;AA7E+B;;AAgFlC,eAAelB,GAAf","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport moment from 'moment';\nimport Card from '@material-ui/core/Card';\nimport CardActionArea from '@material-ui/core/CardActionArea';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport Add from '@material-ui/icons/Add';\nimport Remove from '@material-ui/icons/Remove';\n\nclass App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = { \n      userAvailableDishes: 3,\n      dishes: [],\n      scheduledDishes: []\n    };\n  }\n\n  componentDidMount() {\n    console.log(moment().utcOffset('-0500').hours() < 7);\n\n    fetch('https://testapi.io/api/sajhu/dishes')\n        .then( res => res.json())\n        .then((data)=> {\n            this.setState({\n                dishes: data\n            });\n        })\n  }  \n\n  addDish = (dishId) => {\n    if (moment().utcOffset('-0500') < moment().utcOffset('-0500').startOf('day').hour('19').minute('15')) {\n      if(this.state.scheduledDishes.length < 3) {\n        let scheduledDishes = this.state.scheduledDishes;\n        scheduledDishes.push(dishId);\n        this.setState(scheduledDishes);\n        alert('Dish scheduled successfuly');\n      } else {\n        alert('You cant schedule more than 3 dishes.')\n      }\n    } else {\n      alert('You cant schedule after 7:15')\n    }\n  }\n\n  removeDish = (dishId) => {\n    let scheduledDishes = this.state.scheduledDishes;\n    if( scheduledDishes.filter(dish => dishId === dish)) {\n      const index = scheduledDishes.indexOf(dishId);\n      if (index > -1) {\n        scheduledDishes.splice(index, 1);\n        this.setState(scheduledDishes)\n      }\n    }\n  }\n\n  getAmountOfDishes = (dishId) => {\n    const scheduledDishes = this.state.scheduledDishes;\n    return scheduledDishes.filter(id => id === dishId).length;\n  }\n\n\n  render() {\n    return (\n      <div>\n        {this.state.dishes.map(dish => (\n        <div key={dish._id}>\n                <h5>\n                  {dish.name}\n                </h5>\n                <p>\n                  {dish.shortDescription}\n                </p>\n                <button onClick={() => this.removeDish(dish)}>\n                  -\n                </button>\n                <span>{this.getAmountOfDishes(dish._id)}</span>\n                <button  onClick={() => this.addDish(dish)}>\n                  + \n                </button>\n          </div>\n        ))}\n      </div>\n    )\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}